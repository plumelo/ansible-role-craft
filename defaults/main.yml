---

craft_pkgs:
  - git
  - build-essential
  - zip
  - unzip
  - acl
  - memcached

craft_extra_pkgs: []

craft_name: craft
craft_user: '{{ craft_name }}'

craft_path:
craft_repo:
craft_repo_ref:

craft_tools:
  # yamllint disable-line rule:line-length
  - url: https://github.com/rsanchez/craft-cli/releases/download/0.16.0/craft.phar
    dest: /usr/local/bin/craft
  - url: https://getcomposer.org/composer.phar
    dest: /usr/local/bin/composer

craft_version: '2.7.8'
# yamllint disable-line rule:line-length
craft_download_url: https://download.craftcdn.com/craft/{{ craft_version.split('.')[0:2]| join('.') }}/{{ craft_version }}/Craft-{{ craft_version }}.tar.gz
craft_composer_paths: []
craft_extra_tools: []
craft_cleanup: true

# FPM
craft_fpm_php_version: 7.1
craft_fpm_install: true
craft_php_packages:
  - 'php{{ craft_fpm_php_version }}-fpm'
  - 'php{{ craft_fpm_php_version }}-mysql'
  - 'php{{ craft_fpm_php_version }}-mcrypt'
  - 'php{{ craft_fpm_php_version }}-mbstring'
  - 'php{{ craft_fpm_php_version }}-memcached'
  - 'php{{ craft_fpm_php_version }}-curl'
  - 'php{{ craft_fpm_php_version }}-gd'
  - 'php{{ craft_fpm_php_version }}-zip'
  - 'php{{ craft_fpm_php_version }}-readline'
  - 'php{{ craft_fpm_php_version }}-xml'
craft_php_extra_packages: []

_craft_fpm_settings:
  name: '{{ craft_name }}'
  listen: '/var/run/fpm.{{ craft_name }}.socket'
  user: '{{ craft_user }}'
  group: '{{ craft_user }}'
  listen.owner: www-data
  listen.group: www-data
  chdir: /
craft_fpm_settings: {}

# MySQL
craft_mysql_install: true
craft_db_name: '{{ craft_name }}'
craft_db_user: '{{ craft_name }}'
craft_db_pass: '{{ craft_db_user }}'
craft_db_path:


craft_nginx_install: true
_craft_nginx_site:
  template: 'craft.conf.j2'
  server_name: '{{ craft_name }}.local'

craft_nginx_site: {}
craft_nginx_sites:
  '{{ craft_name }}': '{{ _craft_nginx_site| combine(craft_nginx_site) }}'
